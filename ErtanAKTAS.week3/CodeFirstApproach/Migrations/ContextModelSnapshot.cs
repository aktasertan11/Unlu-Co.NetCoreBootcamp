// <auto-generated />
using System;
using CodeFirstApproach.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeFirstApproach.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeFirstApproach.Entity.Education", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("lessonEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("lessonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lessonStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("roleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.Student_Education", b =>
                {
                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("lessonId")
                        .HasColumnType("int");

                    b.Property<int?>("Educationid")
                        .HasColumnType("int");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.HasKey("studentId", "lessonId");

                    b.HasIndex("Educationid");

                    b.HasIndex("Userid");

                    b.ToTable("Student_Educations");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.Student_RollCall", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("lessonId")
                        .HasColumnType("int");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("lessonId");

                    b.HasIndex("studentId");

                    b.ToTable("Student_RollCalls");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.Student_Success", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("studentId");

                    b.ToTable("Student_Successes");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.Student_Education", b =>
                {
                    b.HasOne("CodeFirstApproach.Entity.Education", "Education")
                        .WithMany("Student_Education")
                        .HasForeignKey("Educationid");

                    b.HasOne("CodeFirstApproach.Entity.User", "User")
                        .WithMany("Student_Education")
                        .HasForeignKey("Userid");

                    b.Navigation("Education");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.Student_RollCall", b =>
                {
                    b.HasOne("CodeFirstApproach.Entity.Education", "Education")
                        .WithMany()
                        .HasForeignKey("lessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstApproach.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.Student_Success", b =>
                {
                    b.HasOne("CodeFirstApproach.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.User", b =>
                {
                    b.HasOne("CodeFirstApproach.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.Education", b =>
                {
                    b.Navigation("Student_Education");
                });

            modelBuilder.Entity("CodeFirstApproach.Entity.User", b =>
                {
                    b.Navigation("Student_Education");
                });
#pragma warning restore 612, 618
        }
    }
}
